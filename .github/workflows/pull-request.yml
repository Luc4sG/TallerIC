name: Pull Request CI

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened, closed]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov pytest-xdist
          
      - name: Run tests with coverage
        run: |
          PYTHONPATH=$PYTHONPATH:$(pwd) pytest --cov=./ --cov-report=xml:coverage.xml --junitxml=test-results.xml -v
          
      - name: List generated files
        run: |
          ls -la
          echo "=== Coverage XML ==="
          cat coverage.xml
          echo "=== Test Results XML ==="
          cat test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage.xml
            test-results.xml

  notify-test-failure:
    name: Notify Test Failure
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: danger
          SLACK_TITLE: Tests Failed
          SLACK_MESSAGE: |
            ❌ Tests failed for branch `${{ github.ref_name }}`
            Please fix the failing tests before continuing
          SLACK_FOOTER: Pull Request Workflow

  lint:
    name: Run Linting
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pre-commit
          
      - name: Run pre-commit checks
        run: |
          pre-commit run --all-files

  notify-lint-failure:
    name: Notify Linting Failure
    needs: lint
    if: failure() && needs.lint.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: danger
          SLACK_TITLE: Linting Failed
          SLACK_MESSAGE: |
            ❌ Linting failed for branch `${{ github.ref_name }}`
            Please fix the linting issues before continuing
          SLACK_FOOTER: Pull Request Workflow

  sonarqube:
    name: SonarQube Analysis
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: .

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  notify-sonarqube-failure:
    name: Notify SonarQube Failure
    needs: sonarqube
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: danger
          SLACK_TITLE: SonarQube Analysis Failed
          SLACK_MESSAGE: |
            ❌ SonarQube analysis failed for branch `${{ github.ref_name }}`
            Please check the analysis report for details
          SLACK_FOOTER: Pull Request Workflow

  notify-success:
    name: Notify Success
    needs: [test, lint, sonarqube]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: good
          SLACK_TITLE: Pull Request CI Success
          SLACK_MESSAGE: |
            ✅ All checks passed for branch `${{ github.ref_name }}`
            - Tests: ✅
            - Linting: ✅
            - SonarQube: ✅
          SLACK_FOOTER: Pull Request Workflow 